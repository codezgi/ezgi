#include <iostream>// inheritance is teh following super class parent class sub class child class ...
using namespace std;
class AbstractEmployee
{
    virtual void AskForPromation() = 0;
};
class employee : AbstractEmployee
{
private:
    string Name;
    string Company;
    int Age;

public:
    void setName(string name)
    {
        Name = name;
    }
    string getName()
    {
        return Name;
    }
    void setCompany(string company)
    {
        Company = company;
    }
    string getCompany()
    {
        return Company;
    }
    void setAge(int age)
    {
        if (age >= 18)
        {
            Age = age;
        }
    }
    int getAge()
    {
        return Age;
    }
    void IntroduceYourSelf()
    {
        cout << "name : " << Name << " company : " << Company << " Age : " << Age;
    }
    employee(string name, string company, int age)
    {
        Name = name;
        Company = company;
        Age = age;
    }
    void AskForPromation(){
        if(Age>40){
            cout<<Name<<" got promoted ";
        }
        else{
            cout<<Name<<" no promotion ";
        }
    }
};

   class Developer: public employee{//developer is child class now and developer has all the properties 
   public :
   string FavoriteProgramingLanguage;
   Developer(string name, string company, int age, string favoriteProgramingLanguage )
    :employee(name,company,age)
    {

    FavoriteProgramingLanguage=favoriteProgramingLanguage;

    }
    void fixbug(){
        cout<<getName()<<" fixed bug using "<<FavoriteProgramingLanguage;
    }


   };


   
    int main()
    {
        
        Developer d=Developer("sÄ±la","youtube",20,"c++");
        d.fixbug();
        d.AskForPromation();
        return 0;
    }
